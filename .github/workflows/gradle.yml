# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Record start time
      id: start
      run: |
        echo "START_ISO=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
        echo "START_EPOCH=$(date -u +%s)" >> $GITHUB_ENV
          
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Save build outcome to env
      if: always()
      run: echo "BUILD_STATUS=${{ steps.run_build.outcome }}" >> $GITHUB_ENV

    - name: Save end time and set metadata
      id: set-metadata
      if: always()
      run: |
        echo "END_ISO=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
        echo "END_EPOCH=$(date -u +%s)" >> $GITHUB_ENV

        # Build a one-line JSON metadata object using python3 (available on ubuntu runners)
          metadata_json=$(python3 - <<'PY'
import json,os,subprocess
start = int(os.environ.get('START_EPOCH','0'))
end = int(os.environ.get('END_EPOCH','0'))
metadata = {
    'date': os.environ.get('END_ISO',''),
    'build': 'build',
    'duration': max(0, end - start),
    'status': os.environ.get('BUILD_STATUS','unknown'),
}
print(json.dumps(metadata))
PY
        # Export metadata as a job output
        echo "metadata=$metadata_json" >> $GITHUB_OUTPUT
        
    record:
      name: Record and upload metadata
      needs: build
      if: always()
      runs-on: ubuntu-latest
      steps:
        - name: Write metadata file
          run: |
            echo '${{ needs.build.outputs.metadata }}' > build-metadata-${{ github.run_id }}.json
  
        - name: Upload metadata artifact
          uses: actions/upload-artifact@v4
          with:
            name: build-metadata-${{ github.run_id }}
            path: build-metadata-${{ github.run_id }}.json
  
        - name: Show metadata (log)
          run: |
            echo "Saved metadata for run ${{ github.run_id }}"
            cat build-metadata-${{ github.run_id }}.json
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Package
        path: build/libs
    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
